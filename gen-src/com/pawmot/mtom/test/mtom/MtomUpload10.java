package com.pawmot.mtom.test.mtom;

import java.net.MalformedURLException;
import java.net.URL;
import javax.annotation.Generated;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.11
 * 2017-05-20T17:09:21.268+02:00
 * Generated source version: 3.1.11
 * 
 */
@WebServiceClient(name = "MtomUpload_1_0", 
                  wsdlLocation = "file:/home/pawmot/Programming/jvm/mtom-test/src/main/resources/wsdl/MtomUpload_1_0.wsdl",
                  targetNamespace = "http://www.pawmot.com/MtomUpload_1_0/") 
@Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2017-05-20T17:09:21.268+02:00", comments = "Apache CXF 3.1.11")
public class MtomUpload10 extends Service {

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2017-05-20T17:09:21.268+02:00")
    public final static URL WSDL_LOCATION;

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2017-05-20T17:09:21.268+02:00")
    public final static QName SERVICE = new QName("http://www.pawmot.com/MtomUpload_1_0/", "MtomUpload_1_0");
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2017-05-20T17:09:21.268+02:00")
    public final static QName MtomUpload10 = new QName("http://www.pawmot.com/MtomUpload_1_0/", "MtomUpload_1_0");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/pawmot/Programming/jvm/mtom-test/src/main/resources/wsdl/MtomUpload_1_0.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MtomUpload10.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/home/pawmot/Programming/jvm/mtom-test/src/main/resources/wsdl/MtomUpload_1_0.wsdl");
        }
        WSDL_LOCATION = url;
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2017-05-20T17:09:21.268+02:00")
    public MtomUpload10(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2017-05-20T17:09:21.268+02:00")
    public MtomUpload10(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2017-05-20T17:09:21.268+02:00")
    public MtomUpload10() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2017-05-20T17:09:21.268+02:00")
    public MtomUpload10(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2017-05-20T17:09:21.268+02:00")
    public MtomUpload10(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2017-05-20T17:09:21.268+02:00")
    public MtomUpload10(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns MtomUploadPortType
     */
    @WebEndpoint(name = "MtomUpload_1_0")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2017-05-20T17:09:21.268+02:00")
    public MtomUploadPortType getMtomUpload10() {
        return super.getPort(MtomUpload10, MtomUploadPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MtomUploadPortType
     */
    @WebEndpoint(name = "MtomUpload_1_0")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2017-05-20T17:09:21.268+02:00")
    public MtomUploadPortType getMtomUpload10(WebServiceFeature... features) {
        return super.getPort(MtomUpload10, MtomUploadPortType.class, features);
    }

}
